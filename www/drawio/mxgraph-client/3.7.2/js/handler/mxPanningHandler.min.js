function mxPanningHandler(a){if(a!=null){this.graph=a;this.graph.addMouseListener(this);this.forcePanningHandler=mxUtils.bind(this,function(c,b){var e=b.getProperty("eventName");var d=b.getProperty("event");if(e==mxEvent.MOUSE_DOWN&&this.isForcePanningEvent(d)){this.start(d);this.active=true;this.fireEvent(new mxEventObject(mxEvent.PAN_START,"event",d));d.consume()}});this.graph.addListener(mxEvent.FIRE_MOUSE_EVENT,this.forcePanningHandler);this.gestureHandler=mxUtils.bind(this,function(d,c){if(this.isPinchEnabled()){var b=c.getProperty("event");if(!mxEvent.isConsumed(b)&&b.type=="gesturestart"){this.initialScale=this.graph.view.scale;if(!this.active&&this.mouseDownEvent!=null){this.start(this.mouseDownEvent);this.mouseDownEvent=null}}else{if(b.type=="gestureend"&&this.initialScale==null){this.initialScale=null}}if(this.initialScale!=null){var e=Math.round(this.initialScale*b.scale*100)/100;if(this.minScale!=null){e=Math.max(this.minScale,e)}if(this.maxScale!=null){e=Math.min(this.maxScale,e)}if(this.graph.view.scale!=e){this.graph.zoomTo(e);mxEvent.consume(b)}}}});this.graph.addListener(mxEvent.GESTURE,this.gestureHandler)}}mxPanningHandler.prototype=new mxEventSource();mxPanningHandler.prototype.constructor=mxPanningHandler;mxPanningHandler.prototype.graph=null;mxPanningHandler.prototype.useLeftButtonForPanning=false;mxPanningHandler.prototype.usePopupTrigger=true;mxPanningHandler.prototype.ignoreCell=false;mxPanningHandler.prototype.previewEnabled=true;mxPanningHandler.prototype.useGrid=false;mxPanningHandler.prototype.panningEnabled=true;mxPanningHandler.prototype.pinchEnabled=true;mxPanningHandler.prototype.maxScale=8;mxPanningHandler.prototype.minScale=0.01;mxPanningHandler.prototype.dx=null;mxPanningHandler.prototype.dy=null;mxPanningHandler.prototype.startX=0;mxPanningHandler.prototype.startY=0;mxPanningHandler.prototype.isActive=function(){return this.active||this.initialScale!=null};mxPanningHandler.prototype.isPanningEnabled=function(){return this.panningEnabled};mxPanningHandler.prototype.setPanningEnabled=function(a){this.panningEnabled=a};mxPanningHandler.prototype.isPinchEnabled=function(){return this.pinchEnabled};mxPanningHandler.prototype.setPinchEnabled=function(a){this.pinchEnabled=a};mxPanningHandler.prototype.isPanningTrigger=function(b){var a=b.getEvent();return(this.useLeftButtonForPanning&&b.getState()==null&&mxEvent.isLeftMouseButton(a))||(mxEvent.isControlDown(a)&&mxEvent.isShiftDown(a))||(this.usePopupTrigger&&mxEvent.isPopupTrigger(a))};mxPanningHandler.prototype.isForcePanningEvent=function(a){return this.ignoreCell||mxEvent.isMultiTouchEvent(a.getEvent())};mxPanningHandler.prototype.mouseDown=function(a,b){this.mouseDownEvent=b;if(!b.isConsumed()&&this.isPanningEnabled()&&!this.active&&this.isPanningTrigger(b)){this.start(b);this.consumePanningTrigger(b)}};mxPanningHandler.prototype.start=function(a){this.dx0=-this.graph.container.scrollLeft;this.dy0=-this.graph.container.scrollTop;this.startX=a.getX();this.startY=a.getY();this.dx=null;this.dy=null;this.panningTrigger=true};mxPanningHandler.prototype.consumePanningTrigger=function(a){a.consume()};mxPanningHandler.prototype.mouseMove=function(b,c){this.dx=c.getX()-this.startX;this.dy=c.getY()-this.startY;if(this.active){if(this.previewEnabled){if(this.useGrid){this.dx=this.graph.snap(this.dx);this.dy=this.graph.snap(this.dy)}this.graph.panGraph(this.dx+this.dx0,this.dy+this.dy0)}this.fireEvent(new mxEventObject(mxEvent.PAN,"event",c))}else{if(this.panningTrigger){var a=this.active;this.active=Math.abs(this.dx)>this.graph.tolerance||Math.abs(this.dy)>this.graph.tolerance;if(!a&&this.active){this.fireEvent(new mxEventObject(mxEvent.PAN_START,"event",c))}}}if(this.active||this.panningTrigger){c.consume()}};mxPanningHandler.prototype.mouseUp=function(b,c){if(this.active){if(this.dx!=null&&this.dy!=null){if(!this.graph.useScrollbarsForPanning||!mxUtils.hasScrollbars(this.graph.container)){var d=this.graph.getView().scale;var a=this.graph.getView().translate;this.graph.panGraph(0,0);this.panGraph(a.x+this.dx/d,a.y+this.dy/d)}c.consume()}this.fireEvent(new mxEventObject(mxEvent.PAN_END,"event",c))}this.panningTrigger=false;this.mouseDownEvent=null;this.active=false;this.dx=null;this.dy=null};mxPanningHandler.prototype.panGraph=function(b,a){this.graph.getView().setTranslate(b,a)};mxPanningHandler.prototype.destroy=function(){this.graph.removeMouseListener(this);this.graph.removeListener(this.forcePanningHandler);this.graph.removeListener(this.gestureHandler)};