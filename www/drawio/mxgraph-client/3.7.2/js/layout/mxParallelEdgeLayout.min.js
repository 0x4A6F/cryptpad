function mxParallelEdgeLayout(a){mxGraphLayout.call(this,a)}mxParallelEdgeLayout.prototype=new mxGraphLayout();mxParallelEdgeLayout.prototype.constructor=mxParallelEdgeLayout;mxParallelEdgeLayout.prototype.spacing=20;mxParallelEdgeLayout.prototype.execute=function(c){var d=this.findParallels(c);this.graph.model.beginUpdate();try{for(var b in d){var a=d[b];if(a.length>1){this.layout(a)}}}finally{this.graph.model.endUpdate()}};mxParallelEdgeLayout.prototype.findParallels=function(d){var b=this.graph.getModel();var e=[];var a=b.getChildCount(d);for(var c=0;c<a;c++){var g=b.getChildAt(d,c);if(!this.isEdgeIgnored(g)){var f=this.getEdgeId(g);if(f!=null){if(e[f]==null){e[f]=[]}e[f].push(g)}}}return e};mxParallelEdgeLayout.prototype.getEdgeId=function(c){var b=this.graph.getView();var d=b.getVisibleTerminal(c,true);var a=b.getVisibleTerminal(c,false);if(d!=null&&a!=null){d=mxObjectIdentity.get(d);a=mxObjectIdentity.get(a);return(d>a)?a+"-"+d:d+"-"+a}return null};mxParallelEdgeLayout.prototype.layout=function(k){var c=k[0];var j=this.graph.getView();var b=this.graph.getModel();var f=b.getGeometry(j.getVisibleTerminal(c,true));var p=b.getGeometry(j.getVisibleTerminal(c,false));if(f==p){var q=f.x+f.width+this.spacing;var a=f.y+f.height/2;for(var m=0;m<k.length;m++){this.route(k[m],q,a);q+=this.spacing}}else{if(f!=null&&p!=null){var n=f.x+f.width/2;var l=f.y+f.height/2;var e=p.x+p.width/2;var d=p.y+p.height/2;var h=e-n;var g=d-l;var o=Math.sqrt(h*h+g*g);if(o>0){var q=n+h/2;var a=l+g/2;var s=g*this.spacing/o;var r=h*this.spacing/o;q+=s*(k.length-1)/2;a-=r*(k.length-1)/2;for(var m=0;m<k.length;m++){this.route(k[m],q,a);q-=s;a+=r}}}}};mxParallelEdgeLayout.prototype.route=function(b,a,c){if(this.graph.isCellMovable(b)){this.setEdgePoints(b,[new mxPoint(a,c)])}};