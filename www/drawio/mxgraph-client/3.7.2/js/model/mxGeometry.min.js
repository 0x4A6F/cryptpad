function mxGeometry(b,d,c,a){mxRectangle.call(this,b,d,c,a)}mxGeometry.prototype=new mxRectangle();mxGeometry.prototype.constructor=mxGeometry;mxGeometry.prototype.TRANSLATE_CONTROL_POINTS=true;mxGeometry.prototype.alternateBounds=null;mxGeometry.prototype.sourcePoint=null;mxGeometry.prototype.targetPoint=null;mxGeometry.prototype.points=null;mxGeometry.prototype.offset=null;mxGeometry.prototype.relative=false;mxGeometry.prototype.swap=function(){if(this.alternateBounds!=null){var a=new mxRectangle(this.x,this.y,this.width,this.height);this.x=this.alternateBounds.x;this.y=this.alternateBounds.y;this.width=this.alternateBounds.width;this.height=this.alternateBounds.height;this.alternateBounds=a}};mxGeometry.prototype.getTerminalPoint=function(a){return(a)?this.sourcePoint:this.targetPoint};mxGeometry.prototype.setTerminalPoint=function(a,b){if(b){this.sourcePoint=a}else{this.targetPoint=a}return a};mxGeometry.prototype.rotate=function(h,b){var a=mxUtils.toRadians(h);var f=Math.cos(a);var c=Math.sin(a);if(!this.relative){var e=new mxPoint(this.getCenterX(),this.getCenterY());var g=mxUtils.getRotatedPoint(e,f,c,b);this.x=Math.round(g.x-this.width/2);this.y=Math.round(g.y-this.height/2)}if(this.sourcePoint!=null){var g=mxUtils.getRotatedPoint(this.sourcePoint,f,c,b);this.sourcePoint.x=Math.round(g.x);this.sourcePoint.y=Math.round(g.y)}if(this.targetPoint!=null){var g=mxUtils.getRotatedPoint(this.targetPoint,f,c,b);this.targetPoint.x=Math.round(g.x);this.targetPoint.y=Math.round(g.y)}if(this.points!=null){for(var d=0;d<this.points.length;d++){if(this.points[d]!=null){var g=mxUtils.getRotatedPoint(this.points[d],f,c,b);this.points[d].x=Math.round(g.x);this.points[d].y=Math.round(g.y)}}}};mxGeometry.prototype.translate=function(b,a){b=parseFloat(b);a=parseFloat(a);if(!this.relative){this.x=parseFloat(this.x)+b;this.y=parseFloat(this.y)+a}if(this.sourcePoint!=null){this.sourcePoint.x=parseFloat(this.sourcePoint.x)+b;this.sourcePoint.y=parseFloat(this.sourcePoint.y)+a}if(this.targetPoint!=null){this.targetPoint.x=parseFloat(this.targetPoint.x)+b;this.targetPoint.y=parseFloat(this.targetPoint.y)+a}if(this.TRANSLATE_CONTROL_POINTS&&this.points!=null){for(var c=0;c<this.points.length;c++){if(this.points[c]!=null){this.points[c].x=parseFloat(this.points[c].x)+b;this.points[c].y=parseFloat(this.points[c].y)+a}}}};mxGeometry.prototype.scale=function(d,c,b){d=parseFloat(d);c=parseFloat(c);if(this.sourcePoint!=null){this.sourcePoint.x=parseFloat(this.sourcePoint.x)*d;this.sourcePoint.y=parseFloat(this.sourcePoint.y)*c}if(this.targetPoint!=null){this.targetPoint.x=parseFloat(this.targetPoint.x)*d;this.targetPoint.y=parseFloat(this.targetPoint.y)*c}if(this.points!=null){for(var a=0;a<this.points.length;a++){if(this.points[a]!=null){this.points[a].x=parseFloat(this.points[a].x)*d;this.points[a].y=parseFloat(this.points[a].y)*c}}}if(!this.relative){this.x=parseFloat(this.x)*d;this.y=parseFloat(this.y)*c;if(b){c=d=Math.min(d,c)}this.width=parseFloat(this.width)*d;this.height=parseFloat(this.height)*c}};mxGeometry.prototype.equals=function(a){return mxRectangle.prototype.equals.apply(this,arguments)&&this.relative==a.relative&&((this.sourcePoint==null&&a.sourcePoint==null)||(this.sourcePoint!=null&&this.sourcePoint.equals(a.sourcePoint)))&&((this.targetPoint==null&&a.targetPoint==null)||(this.targetPoint!=null&&this.targetPoint.equals(a.targetPoint)))&&((this.points==null&&a.points==null)||(this.points!=null&&mxUtils.equalPoints(this.points,a.points)))&&((this.alternateBounds==null&&a.alternateBounds==null)||(this.alternateBounds!=null&&this.alternateBounds.equals(a.alternateBounds)))&&((this.offset==null&&a.offset==null)||(this.offset!=null&&this.offset.equals(a.offset)))};