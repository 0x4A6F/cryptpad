function mxShapePidFan(b,d,c,a){mxShape.call(this);this.bounds=b;this.fill=d;this.stroke=c;this.strokewidth=(a!=null)?a:1}mxUtils.extend(mxShapePidFan,mxShape);mxShapePidFan.prototype.cst={SHAPE_FAN:"mxgraph.pid2misc.fan",FAN_TYPE:"fanType",COMMON:"common",AXIAL:"axial",RADIAL:"radial"};mxShapePidFan.prototype.paintVertexShape=function(f,a,e,b,d){f.translate(a,e);this.background(f,a,e,b,d);f.setShadow(false);this.foreground(f,a,e,b,d)};mxShapePidFan.prototype.background=function(f,a,e,b,d){f.ellipse(0,0,b,d);f.fillAndStroke()};mxShapePidFan.prototype.foreground=function(g,a,f,b,e){g.begin();g.moveTo(b*0.3,e*0.045);g.lineTo(b*0.97,e*0.33);g.moveTo(b*0.3,e*0.955);g.lineTo(b*0.97,e*0.67);g.moveTo(b*0.4228,e*0.3655);g.arcTo(b*0.15,e*0.03,50,0,1,b*0.5,e*0.5);g.arcTo(b*0,15,e*0.03,50,0,1,b*0.3772,e*0.4045);g.arcTo(b*0.15,e*0.03,50,0,1,b*0.3025,e*0.271);g.arcTo(b*0.15,e*0.03,50,0,1,b*0.4228,e*0.3655);g.close();g.moveTo(b*0.377,e*0.5973);g.arcTo(b*0.15,e*0.03,-50,0,1,b*0.4966,e*0.5019);g.arcTo(b*0,15,e*0.03,-50,0,1,b*0.423,e*0.636);g.arcTo(b*0.15,e*0.03,-50,0,1,b*0.3034,e*0.7314);g.arcTo(b*0.15,e*0.03,-50,0,1,b*0.377,e*0.5973);g.close();g.stroke();g.ellipse(b*0.5,e*0.47,b*0.3,e*0.06);g.stroke();var d=mxUtils.getValue(this.style,mxShapePidFan.prototype.cst.FAN_TYPE,"common");if(d===mxShapePidFan.prototype.cst.AXIAL){g.begin();g.moveTo(b*0.1,e*0.5);g.lineTo(b*0.3,e*0.5);g.stroke()}else{if(d===mxShapePidFan.prototype.cst.RADIAL){g.begin();g.moveTo(b*0.2,e*0.4);g.lineTo(b*0.2,e*0.6);g.stroke()}}};mxCellRenderer.prototype.defaultShapes[mxShapePidFan.prototype.cst.SHAPE_FAN]=mxShapePidFan;function mxShapePidColumn(b,d,c,a){mxShape.call(this);this.bounds=b;this.fill=d;this.stroke=c;this.strokewidth=(a!=null)?a:1}mxUtils.extend(mxShapePidColumn,mxShape);mxShapePidColumn.prototype.cst={SHAPE_COLUMN:"mxgraph.pid2misc.column",COLUMN_TYPE:"columnType",COMMON:"common",FIXED:"fixed",FLUIDIZED:"fluid",BAFFLE:"baffle",VALVE:"valve",BUBBLE:"bubble",NOZZLE:"nozzle",TRAY:"tray"};mxShapePidColumn.prototype.paintVertexShape=function(f,a,e,b,d){f.translate(a,e);this.background(f,a,e,b,d);f.setShadow(false);this.foreground(f,a,e,b,d)};mxShapePidColumn.prototype.background=function(f,a,e,b,d){d=Math.max(d,30);f.begin();f.moveTo(0,15);f.arcTo(b*0.5,15,0,0,1,b,15);f.lineTo(b,d-15);f.arcTo(b*0.5,15,0,0,1,0,d-15);f.close();f.fillAndStroke()};mxShapePidColumn.prototype.foreground=function(z,o,n,p,v){var d=mxUtils.getValue(this.style,mxShapePidColumn.prototype.cst.COLUMN_TYPE,"common");if(d===mxShapePidColumn.prototype.cst.FIXED){var f=p*1.2;var q=v-50;var b=q%f;var A=b*0.5+25;z.begin();for(var u=0;u<=q-f;u+=f){z.moveTo(0,u+A+f*0.1);z.lineTo(p,u+A+f*0.1);z.moveTo(0,u+A+f*0.9);z.lineTo(p,u+A+f*0.9);z.moveTo(0,u+A+f*0.1);z.lineTo(p,u+A+f*0.9);z.moveTo(0,u+A+f*0.9);z.lineTo(p,u+A+f*0.1)}z.stroke()}else{if(d===mxShapePidColumn.prototype.cst.TRAY){var f=p*0.2;var q=v-50;var b=q%f;var A=b*0.5+25;z.setDashed(true);z.begin();for(var u=0;u<=q;u+=f){z.moveTo(0,u+A);z.lineTo(p,u+A)}z.stroke()}else{if(d===mxShapePidColumn.prototype.cst.FLUIDIZED){var k=p*0.1;var l=p*0.1;var q=v-50;var b=q%k;var A=25;var r=Math.min(p,v)*0.02;var e=mxUtils.getValue(this.style,mxConstants.STYLE_FILLCOLOR,"#ffffff");var B=mxUtils.getValue(this.style,mxConstants.STYLE_DASHED,"0");var s=mxUtils.getValue(this.style,mxConstants.STYLE_STROKECOLOR,"#000000");var g=0;z.setFillColor(s);z.setDashed(true);z.begin();z.moveTo(0,25);z.lineTo(p,25);z.moveTo(0,v-25);z.lineTo(p,v-25);z.stroke();if(B==="0"){z.setDashed(false)}else{z.setDashed(true)}var m=0;for(var u=A+k*0.5;u<q+A-r;u+=k){var a=l;g=m%2;if(g===0){a=l*0.5}for(var t=a;t<p;t+=l){z.ellipse(t,u,r,r);z.fillAndStroke()}m++}}else{if(d===mxShapePidColumn.prototype.cst.BAFFLE){var k=p*0.2;var q=v-50-k;var b=q%k;var A=25+k*0.5;var g=0;z.setDashed(true);z.begin();z.moveTo(0,25);z.lineTo(p,25);z.moveTo(0,v-25);z.lineTo(p,v-25);z.stroke();var m=0;z.begin();for(var u=A+k*0.5;u<q+A;u+=k){g=m%2;if(g===0){z.moveTo(0,u);z.lineTo(p*0.9,u);z.lineTo(p*0.9,u-k*0.3)}else{z.moveTo(p*0.1,u-k*0.5);z.lineTo(p*0.1,u);z.lineTo(p,u)}m++}z.stroke()}else{if(d===mxShapePidColumn.prototype.cst.VALVE||d===mxShapePidColumn.prototype.cst.BUBBLE){var k=p*0.2;var q=v-50-k;var b=q%k;var A=25+k*0.5;var B=mxUtils.getValue(this.style,mxConstants.STYLE_DASHED,"0");var g=0;z.setFillColor(s);z.setDashed(true);z.begin();z.moveTo(0,25);z.lineTo(p,25);z.moveTo(0,v-25);z.lineTo(p,v-25);z.stroke();if(B==="0"){z.setDashed(false)}else{z.setDashed(true)}z.begin();for(var u=A+k*0.5;u<q+A;u+=k){z.moveTo(0,u);z.lineTo(p*0.4,u);if(d===mxShapePidColumn.prototype.cst.VALVE){z.moveTo(p*0.4,u-k*0.2);z.lineTo(p*0.6,u-k*0.2)}else{if(d===mxShapePidColumn.prototype.cst.BUBBLE){z.moveTo(p*0.25,u-k*0.2);z.arcTo(k*3,k*3,0,0,1,p*0.75,u-k*0.2)}}z.moveTo(p*0.6,u);z.lineTo(p,u)}z.stroke()}else{if(d===mxShapePidColumn.prototype.cst.NOZZLE){var f=p*1.2;var q=v-50;var b=q%f;var A=b*0.5+25;var B=mxUtils.getValue(this.style,mxConstants.STYLE_DASHED,0);for(var u=0;u<=q-f;u+=f){z.setDashed(true);z.begin();z.moveTo(0,u+A+f*0.2);z.lineTo(p,u+A+f*0.2);z.moveTo(0,u+A+f*0.8);z.lineTo(p,u+A+f*0.8);z.stroke();if(B===0){z.setDashed(false)}else{z.setDashed(true)}z.begin();z.moveTo(0,u+A+f*0.2);z.lineTo(p,u+A+f*0.8);z.moveTo(0,u+A+f*0.8);z.lineTo(p,u+A+f*0.2);if(u!==0){z.moveTo(0,u+A);z.lineTo(p*0.5,u+A);z.moveTo(p*0.5-f*0.08,u+A+f*0.08);z.lineTo(p*0.5,u+A);z.lineTo(p*0.5+f*0.08,u+A+f*0.08);z.moveTo(p*0.5,u+A);z.lineTo(p*0.5,u+A+f*0.08)}z.stroke()}z.stroke()}}}}}}};mxCellRenderer.prototype.defaultShapes[mxShapePidColumn.prototype.cst.SHAPE_COLUMN]=mxShapePidColumn;function mxShapePidConveyor(b,d,c,a){mxShape.call(this);this.bounds=b;this.fill=d;this.stroke=c;this.strokewidth=(a!=null)?a:1}mxUtils.extend(mxShapePidConveyor,mxShape);mxShapePidConveyor.prototype.cst={SHAPE_CONVEYOR:"mxgraph.pid2misc.conveyor"};mxShapePidConveyor.prototype.paintVertexShape=function(f,a,e,b,d){f.translate(a,e);this.background(f,a,e,b,d);f.setShadow(false)};mxShapePidConveyor.prototype.background=function(g,l,k,m,d){var f=Math.min(d,m*0.5);g.begin();g.moveTo(f*0.5,0);g.lineTo(m-f*0.5,0);g.stroke();g.ellipse(0,0,f,f);g.fillAndStroke();g.ellipse(m-f,0,f,f);g.fillAndStroke();g.begin();g.moveTo(f*0.5,f);g.lineTo(m-f*0.5,f);g.stroke();var j=m-f*1.8;var e=f*0.9;var a=f*0.7;for(var b=0;b<j;b=b+a){g.rect(e+b,0,f*0.2,f*0.1);g.fillAndStroke();g.rect(e+b,f*0.9,f*0.2,f*0.1);g.fillAndStroke()}};mxCellRenderer.prototype.defaultShapes[mxShapePidConveyor.prototype.cst.SHAPE_CONVEYOR]=mxShapePidConveyor;