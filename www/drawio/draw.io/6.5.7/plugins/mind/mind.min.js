Draw.loadPlugin(function(m){var n=m.editor.graph;var i=n.getModel();var j=new mxCompactTreeLayout(n,true);j.edgeRouting=false;j.levelDistance=100;function o(p){var c=false;if(p!=null){n.traverse(p,true,function(r){var q=n.view.getState(r);c=q.style.mindmapRoot=="1";return !c},null,null,true)}return c}var e=n.foldCells;n.foldCells=function(v,u,q,p,c){this.stopEditing();this.model.beginUpdate();try{var t=q.splice();var s=[];for(var r=0;r<q.length;r++){if(o(q[r])){n.traverse(q[r],true,function(x,w){if(w!=null){s.push(w)}if(x!=q[r]){s.push(x)}return true});n.model.setCollapsed(q[r],v)}}for(var r=0;r<s.length;r++){n.model.setVisible(s[r],!v)}q=t;e.apply(this,arguments)}finally{this.model.endUpdate()}};var h=n.removeCells;n.removeCells=function(p,s){var r=[];for(var q=0;q<p.length;q++){if(o(p[q])){n.traverse(p[q],true,function(u,t){r.push(t);r.push(u);return true});var c=n.getIncomingEdges(p[q]);p=p.concat(c)}else{r.push(p[q])}}p=r;h.apply(this,arguments)};var f=n.connectVertex;m.hoverIcons.getStateAt=function(p,c,q){return(o(p.cell))?null:this.graph.view.getState(this.graph.getCellAt(c,q))};n.connectVertex=function(c,t,r,v,s){var p=n.view.getState(c);if(o(p.cell)){var u=parseInt(p.style.strokeWidth||1);var w=new mxCell("Sub Topic",new mxGeometry(0,0,80,20),"shape=partialRectangle;top=0;left=0;bottom=1;right=0;autosize=1;points=[[0,1],[1,1]];snapToPoint=1;strokeColor=#000000;fillColor=none;align=center;verticalAlign=middle;collapsible=1;spacingLeft=14;strokeWidth="+u+";");w.vertex=true;var q=new mxCell("",new mxGeometry(0,0,0,0),"edgeStyle=entityRelationEdgeStyle;curved=1;startArrow=none;endArrow=none;endFill=0;jettySize=auto;entryX=0;entryY=1;strokeWidth="+u+";"+((p.style.mindmapRoot=="1")?"":"exitX=1;exitY=1;"));q.geometry.setTerminalPoint(new mxPoint(-100,60),true);q.geometry.relative=true;q.edge=true;w.insertEdge(q,false);i.beginUpdate();try{n.addCell(w,i.getParent(c));n.addEdge(q,i.getParent(c),c,w);if(p.style.mindmapRoot!="1"&&n.getOutgoingEdges(c).length>1){n.moveCells([p.cell],0,30)}j.execute(i.getParent(c),c);this.fireEvent(new mxEventObject("cellsInserted","cells",[w,q]))}finally{i.endUpdate()}n.startEditingAtCell(w);return[w]}else{return f.apply(this,arguments)}};var g=n.graphHandler.getCells;n.graphHandler.getCells=function(p){var c=g.apply(this,arguments);var q=n.view.getState(p);if(q!=null&&o(q.cell)){n.traverse(p,true,function(r){if(mxUtils.indexOf(c,r)<0){c.push(r)}return true})}return c};function b(q){this.images=[];var p=q.view.graph;var c=mxUtils.createImage("plugins/mind/handle-move.gif");c.setAttribute("title","Move Cell without Subtree");c.style.position="absolute";c.style.cursor="pointer";c.style.width="26px";c.style.height="26px";c.style.left=(q.getCenterX()-13)+"px";c.style.top=(q.getCenterY()-13)+"px";mxEvent.addGestureListeners(c,mxUtils.bind(this,function(r){p.stopEditing(false);p.graphHandler.start(q.cell,mxEvent.getClientX(r),mxEvent.getClientY(r));p.graphHandler.cells=[q.cell];p.graphHandler.bounds=p.graphHandler.graph.getView().getBounds(p.graphHandler.cells);p.graphHandler.pBounds=p.graphHandler.getPreviewBounds(p.graphHandler.cells);p.graphHandler.cellWasClicked=true;p.isMouseDown=true;p.isMouseTrigger=mxEvent.isMouseEvent(r);mxEvent.consume(r);mxEvent.consume(r);this.destroy()}));q.view.graph.container.appendChild(c);this.images.push(c)}b.prototype.destroy=function(){if(this.images!=null){for(var p=0;p<this.images.length;p++){var c=this.images[p];c.parentNode.removeChild(c)}}this.images=null};var d=20;n.addMouseListener({currentState:null,currentIconSet:null,mouseDown:function(c,p){if(this.currentState!=null){this.dragLeave(p.getEvent(),this.currentState);this.currentState=null}},mouseMove:function(q,r){if(this.currentState!=null&&(r.getState()==this.currentState||r.getState()==null)){var c=d;var p=new mxRectangle(r.getGraphX()-c,r.getGraphY()-c,2*c,2*c);if(mxUtils.intersects(p,this.currentState)){return}}var p=n.view.getState(r.getCell());if(n.isMouseDown||n.isEditing()||(p!=null&&(!n.getModel().isVertex(p.cell)||!o(r.getCell())))){p=null}if(p!=this.currentState){if(this.currentState!=null){this.dragLeave(r.getEvent(),this.currentState)}this.currentState=p;if(this.currentState!=null){this.dragEnter(r.getEvent(),this.currentState)}}},mouseUp:function(c,p){},dragEnter:function(c,p){if(this.currentIconSet==null){this.currentIconSet=new b(p)}},dragLeave:function(c,p){if(this.currentIconSet!=null){this.currentIconSet.destroy();this.currentIconSet=null}}});var l=m.sidebar;l.addPalette("mindmaps","Mindmaps",true,function(c){c.appendChild(m.sidebar.createVertexTemplate("shape=cloud;mindmapRoot=1;fontSize=15;fontStyle=1;strokeWidth=2;align=center;points=[[0.16,0.55,0],[0.875,0.5,0]];snapToPoint=1;collapsible=1;",120,80,"Main Idea","Mindmap Root"));(function(){var p=new mxCell("Main Topic",new mxGeometry(0,0,80,20),"shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];snapToPoint=1;autosize=1;strokeColor=#000000;fillColor=none;align=center;verticalAlign=middle;fontSize=14;fontStyle=1;strokeWidth=2;");p.vertex=true;var q=new mxCell("",new mxGeometry(0,0,0,0),"edgeStyle=entityRelationEdgeStyle;curved=1;startArrow=none;endArrow=none;endFill=0;jettySize=auto;strokeWidth=2;");q.geometry.setTerminalPoint(new mxPoint(-100,60),true);q.geometry.relative=true;q.edge=true;p.insertEdge(q,false);c.appendChild(l.createVertexTemplateFromCells([p,q],80,20,"Main Branch"))})();(function(){var p=new mxCell("Sub Topic",new mxGeometry(0,0,80,20),"shape=partialRectangle;top=0;left=0;bottom=1;right=0;points=[[0,1],[1,1]];snapToPoint=1;autosize=1;strokeColor=#000000;fillColor=none;align=center;verticalAlign=middle;fontSize=12;fontStyle=0;");p.vertex=true;var q=new mxCell("",new mxGeometry(0,0,0,0),"edgeStyle=entityRelationEdgeStyle;curved=1;startArrow=none;endArrow=none;endFill=0;jettySize=auto;");q.geometry.setTerminalPoint(new mxPoint(-100,60),true);q.geometry.relative=true;q.edge=true;p.insertEdge(q,false);c.appendChild(l.createVertexTemplateFromCells([p,q],80,20,"Sub Branch"))})()});var k=m.sidebar.container;var a=k.getElementsByTagName("a")[0];a.click();k.insertBefore(k.lastChild.previousSibling,a);k.insertBefore(k.lastChild,a)});